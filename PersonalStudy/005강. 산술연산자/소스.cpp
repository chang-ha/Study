
int main()
{
	// 연산자 (Operator)
	// 산술연산자
	// +, - , *, /(나누기, 몫만표시) , %(모듈러스, 나머지연산자,)
	// ++, --
	int data = 10 + 10;
	data + 20; // 연산만 하면 의미가 없음

	// data = data + 20;
	// 아래와 같이 표현가능
	data += 20;

	int result = 10 / 3; // 값이 3만 나옴 (몫만 표현)
	result = 10 % 3; // 값이 1만 나옴 (나머지만 표현)
	// 실수끼리 연산하면 어떻게 될 까? 나머지가 존재하나? X 소숫점으로 계속 이어짐
	// 실수끼리 모듈러스 연산을 하면 문법오류가 생김 (실수끼리는 나머지 존재 X)
	// %(모듈러스) 연산자는 피연산자가 모두 정수여야 사용가능

	result = 10. / 3.;
	// 실수끼리 나머지 연산을 하면 소숫점 3.33333... 이렇게 이어짐
	// 그치만 결과를 받는 result는 int자료형(정수형)이기 때문에 몫을 정수표현체계로 변환함
	// 따라서 3.3333은 3으로 변환됨
	// 그렇지만 변환하면서 소숫점은 모두 사라졌으므로 경고가 출력됨
	// double이 int로 변환되면서 데이터 손실이 발생할 수 있다.
	// 그래서 내가 의도한 바를 명확하게 명시해주는게 좋음
	result = int(10. / 3.);

	// 10.2415f 와 10.의 차이 (f를 붙이고 안붙이고 차이)
	// f를 붙이면 4byte인 float타입으로 보는것이고, f를 안붙이면 8byte인 double로 보겠다는 뜻임)
	// 0.1f, 0.1

	// 대입연산자
	// =

}