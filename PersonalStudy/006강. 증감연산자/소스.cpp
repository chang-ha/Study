
int main()
{
	// 산술연산자
	// ++, --

	int data = 0;
	data++; // 1
	data++; // 2
	data--; // 1
	data--; // 0

	// 정수에서는 ++, --가 1증가, 감소가 맞지만
	// 추후에 포인터 개념으로 넘어가면 1증가, 감소가 아니므로 다르게 정의해 두자
	// 다음 단계로 증가한다로 표현???
	// 한 단계 증가 혹은 감소
	// 숫자에서는 다음단계가 숫자 1 증가
	// 피연산자에 따라 한 단계가 다르게 받아들여짐

	// ++, -- 위치에 따라 다르게 받아들여짐
	// 앞 뒤에 따라 연산자 우선순위가 달라짐
	++data; // 전위(전치)
	data++; // 후위(후치) << 모든 연산자를 통틀어 가장 마지막에 연산

	int a = 0;
	data = 0;
	a = 10;
	data = a++; // data = 10 , a = 11

	data = 0;
	a = 10;
	data = ++a; // data = 11, a = 11 

	// ++data, data++ 이렇게 전위, 후위가 구분필요없는 경우에는 전위로 쓰는습관이 좋음
	// 왜냐면 후위로 쓰다보면 추후에 클래스나 구조체에서 효율이 안좋은 함수를 호출할 문제가 생김
	// 나중에 연산자 오버로딩시 알게됨

}